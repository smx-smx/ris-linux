#!/bin/sh
#
### BEGIN INIT INFO
# Provides: minibinl
# Default-Start:
# Default-Stop:
# Should-Start:
# Required-Start: $network
# Required-Stop:
# Short-Description: Start and stop the mini BINL server
# Description: minibinl provides a simple Boot Information Negotiation Layer
#              (BINL) server
### END INIT INFO
#
# The fields below are left around for legacy tools (will remove later).
#
# chkconfig: - 65 35
# description: minibinl provides a simple Boot Information Negotiation Layer \
#              (BINL) server
# processname: minibinl
# config: /etc/binl/nics.txt
# pidfile: /var/run/minibinl.pid

. /etc/init.d/functions

RETVAL=0

prog=minibinl
minibinl=/usr/sbin/minibinl
binldb=/etc/binl/nics.txt
lockfile=/var/lock/subsys/minibinl
pidfile=/var/run/minibinl.pid

start() {
    [ -x $minibinl ] || return 5
    [ -f $binldb ] || return 6

    pidofproc $prog >/dev/null 2>&1
    RETVAL=$?
    [ $RETVAL -eq 0 ] && return $RETVAL

    echo -n $"Starting $prog: "
    nohup $minibinl >> /var/log/minibinl.log 2>&1 < /dev/null &
    RETVAL=$?
    pidofproc $prog > $pidfile
    echo
    [ $RETVAL = 0 ] && touch $lockfile
    return $RETVAL
}

stop() {
    pidofproc $prog >/dev/null 2>&1
    if [ $? -ne 0 ]; then
        RETVAL=7
        return $RETVAL
    fi

    echo -n $"Shutting down $prog: "
    killproc $prog
    rm -f $pidfile
    RETVAL=$?

    echo
    [ $RETVAL = 0 ] && rm -f $lockfile
    return $RETVAL
}

if [ $# -gt 1 ]; then
    RETVAL=2
    exit $RETVAL
fi

case "$1" in
    start)
        start
        RETVAL=$?
        ;;
    stop)
        stop
        RETVAL=$?
        ;;
    restart|force-reload)
        stop ; start
        RETVAL=$?
        ;;
    condrestart)
        if [ -f $lockfile ]; then
            stop ; start
            RETVAL=$?
        fi
        ;;
    status)
        status $minibinl
        RETVAL=$?
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        RETVAL=3
        ;;
esac

exit $RETVAL
